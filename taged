[1mdiff --git a/Git-Notes.txt b/Git-Notes.txt[m
[1mindex c861fbf..1524636 100644[m
[1m--- a/Git-Notes.txt[m
[1m+++ b/Git-Notes.txt[m
[36m@@ -2,9 +2,10 @@[m
 [m
 GIT : Distributed revision-control system.[m
 [m
[31m-Git is a peice of software that does version control. It is only installed locally on any machine (Linux, Win, Mac). [m
[32m+[m[32mGit is a piece of software that does version control. It is only installed locally on any machine (Linux, Win, Mac).[m[41m [m
 GitHub, BitBucket etc. are web based implementation of Git, developed by different companies. They function similar to git. They very well support syncing of project between their individual web application and locally installed Git.[m
[31m-Note: I would be using GitHub remote (online) repository.[m
[32m+[m
[32m+[m[32mNote: Notes are articulated using GitHub repository.[m
 [m
 [m
 Features of Git:[m
[36m@@ -14,67 +15,85 @@[m [mTest changes to code without losing original.[m
 Revert back to older version of code.[m
 [m
 [m
[31m-Learning GIT can be started in 2 ways:[m
[31m-By creating a local git repository.[m
[31m-By cloning a remote (online) repository to local machine. [Online Repo: GitHub, BitBucket, Company's Own Server, AWS, etc.][m
[31m-[m
[31m-** Recommended to start with 1st way. This will help you to clearly distinguish between Git & GitHub.[m
[32m+[m[32mLet's begin Git journey![m
 [m
[32m+[m[32mStep 1: Install Git. [Refer Git website][m
 [m
[31m-Learning Git by creating local Git repository:[m
[32m+[m[32m---x---[m
 [m
[31m-Step 1: Install Git.[m
[32m+[m[32mStep 2: Configure your Git credentials [git config - username and email].[m[41m [m
 [m
[31m-Step 2: Configure Git.[m
[31m-Here you configure your Git credentials. [m
[32m+[m[32mExecute below commands in Git Bash, by editing the necessary details:[m
 [m
[31m-git config : This command sets the author name and email address respectively to be used with your commits. Execute below commands in Git Bash, by editing the necessary details:[m
[32m+[m[32mgit config ‚Äìglobal user.name ‚Äú[name]‚Äù                 --> This command sets the author name that is used identify individual's commits.[m
[32m+[m[32mEx. git config ‚Äìglobal user.name ‚Äúanand‚Äù[m[41m [m
 [m
[31m-git config ‚Äìglobal user.name ‚Äú[name]‚Äù [m
[31m- [m
[31m-git config ‚Äìglobal user.email ‚Äú[email address]‚Äù  [m
[32m+[m[32mgit config ‚Äìglobal user.email ‚Äú[email address]‚Äù       --> This command sets the email address that is used identify individual's commits.[m
[32m+[m[32mEx. git config ‚Äìglobal user.email ‚Äúanand@gmail.com‚Äù[m
 [m
[32m+[m[32m---x---[m
 [m
[31m-Step 3: Create a Git reposity.[m
[31m-git init : This command is used to create a git repository.[m
[32m+[m[32mStep 3: Create a Git repository [git init].[m
 [m
 Three ways:- [m
 [m
[31m-a] To create a new repository using Git Bash: [m
[32m+[m[32ma] Creating new Git repository using Git Bash:[m[41m [m
 In Git Bash, navigate to the directory location where you want to create a git repository and execute following command[m
 [m
 git init [repository name] [m
[31m-[m
 Ex. git init new-repo[m
 [m
 This will create a new repository 'new-repo' on the drive location where you execute the command.[m
[32m+[m[41m                 [m
 [m
[31m-[m
[31m-b] Create a repo of an existing project folder:[m
[32m+[m[32mb] Make existing project folder as a Git repository:[m
 In GIT Bash, navigate to your project folder [Using 'cd' command]. Run 'git init' command.[m
 Another way to do this is right click on project folder and select 'Git Bash Here' option. Run 'git init' command.[m
 [m
 This will add your project folder to local git repository. [m
 [m
 [m
[31m-c] Cloning a repository from a remote server [Online Repo: GitHub, BitBucket, Company's Own Server, AWS, etc.][m
[32m+[m[32mc] Cloning a repository from a remote server [Ex. GitHub, BitBucket, Company's Own Server, AWS, etc.][m
 In Git Bash, navigate to the directory location where you want to make a copy of remote git repository, locally using it's URL.[m
 [m
 git clone [url][m
[32m+[m[32mEx. git clone https://github.com/devops-anand/GIT-GITHUB-Notes.git[m
[32m+[m
[32m+[m
[32m+[m[32m---x---[m
[32m+[m
[32m+[m[32mStep 4: Playing with repository [Create, Edit, Delete Files in repository.][m
[32m+[m
[32m+[m[32m---x---[m
[32m+[m
[32m+[m[32mStep 5: Adding the changes to the staging area.[m[41m [m
[32m+[m[32m- Whatever changes you have made to the repository in Step 4, are to be added to the staging area[m[41m [m
[32m+[m
[32m+[m[32mgit add [filename.extn]         --> This command adds a specified file to the staging area.[m
[32m+[m[32mEx. git add File1.txt[m
[32m+[m
[32m+[m[32mgit add *                       --> This command adds all applicable files to the staging area.[m
[32m+[m
[32m+[m[32m---x---[m
 [m
[32m+[m[32mStep 6: Committing the snapshot(s) of the file(s) to version history.[m[41m [m
[32m+[m[32mMeans to save a copy to version history records which is kind of a benchmark. This benchmark specifies the point at which changes can be reverted.[m
[32m+[m[32mThis command commits only those file(s) that are present in staging area.[m
 [m
[32m+[m[32mgit commit -m ‚Äú[ Type in the commit message]‚Äù     --> This command commits all file(s) present in staging area.[m
 [m
[31m-Step 4: Playing with repository. [m
 [m
[31m-Create, Edit, Delete Files in repository.[m
[32m+[m[32mNow if you want to directly commit any files i.e. by omitting the Step 5 , then use below command:[m
 [m
[32m+[m[32mgit commit -am ‚Äú[ Type in the commit message]‚Äù[m
 [m
[32m+[m[32mThis command commits any files you‚Äôve added with the git add command and also commits any files you‚Äôve changed since then.[m
 [m
[31m-Step 5: Adding the changes to the staging area.[m
[32m+[m[32m---x---[m
 [m
[31m-git add [file]  : This command adds a specified file to the staging area.[m
[32m+[m[32mTill now we have seen a basic setup & working in Git repository:  setting up Git repository, playing with files, saving the changes of repository to version history (i.e. Committing). Now we will look at some other helpful Git commands[m
 [m
[31m-git add *  : This command adds all applicable files to the staging area.[m
[32m+[m[32m---x---[m
 [m
 [m
 [m
[1mdiff --git a/README.md b/README.md[m
[1mindex b6e1b48..b7d3e33 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -12,11 +12,49 @@[m [mTopic: Understanding the GitHub flow (https://guides.github.com/introduction/flo[m
 Topic: How to sync project between Git & GitHub.[m
 Topic: [m
 [m
[31m-#Topics (Advanced):[m
[31m-[m
[31m-[m
[31m-[m
[31m-[m
[32m+[m[32m#Topics :[m
[32m+[m
[32m+[m
[32m+[m[32m#Setup and Config[m
[32m+[m[32mgit[m
[32m+[m[32mconfig[m
[32m+[m[32mhelp[m
[32m+[m
[32m+[m[32m#Getting and Creating Projects[m
[32m+[m[32minit[m
[32m+[m[32mclone[m
[32m+[m[32mBasic Snapshotting[m
[32m+[m[32madd[m
[32m+[m[32mstatus[m
[32m+[m[32mdiff[m
[32m+[m[32mcommit[m
[32m+[m[32mreset[m
[32m+[m[32mrm[m
[32m+[m[32mmv[m
[32m+[m
[32m+[m[32m#Branching and Merging[m
[32m+[m[32mbranch[m
[32m+[m[32mcheckout[m
[32m+[m[32mmerge[m
[32m+[m[32mmergetool[m
[32m+[m[32mlog[m
[32m+[m[32mstash[m
[32m+[m[32mtag[m
[32m+[m[32mworktree[m
[32m+[m
[32m+[m[32m#Sharing and Updating Projects[m
[32m+[m[32mfetch[m
[32m+[m[32mpull[m
[32m+[m[32mpush[m
[32m+[m[32mremote[m
[32m+[m[32msubmodule[m
[32m+[m
[32m+[m[32m#Inspection and Comparison[m
[32m+[m[32mshow[m
[32m+[m[32mlog[m
[32m+[m[32mdiff[m
[32m+[m[32mshortlog[m
[32m+[m[32mdescribe[m
 [m
 [m
 [m
